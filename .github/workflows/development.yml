name: Deploy development
on:
  push:
    branches:
      - dev
      - staging
env:
  PIPELINE_ID: ${{ github.run_id }} - ${{ github.run_attempt }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # Remove node_modules and package-lock.json to assure we're grabbing the latest every time
      - name: Remove node_modules
        run: rm -rf node_modules

      - name: Remove package-lock.json
        run: rm -rf package-lock.json

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: list all files
        run: ls -la

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Build Docker images for dev
        if: github.ref == 'refs/heads/dev'
        run: docker build -t dev-image -f Dockerfile.dev .
      - name: Build Docker images for staging
        if: github.ref == 'refs/heads/staging'
        run: docker build -t stage-image -f Dockerfile.stage .
      - name: Archive deployment package
        run: |
          zip -r deployment.zip . -x '*.git*'
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: MyNodeApp
          environment_name: dev-api
          region: ap-south-1
          version_label: ${{ env.PIPELINE_ID }}
          deployment_package: deployment.zip
